---
- name: upgrade the infrastructure 
  gather_facts: false
  hosts: all
  tasks:
    - name: upgrade all packages
      yum:
        name: *
        state: latest
    - name: adding authorized key
      ansible.posix.authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
    - name: rebooting everything
      reboot:
        reboot_timeout: 300
- name: configure the web servers
  gather_facts: false
  hosts: web
  tasks:
    - name: configure the web server
      import_role: /roles/web
    - name: copy the index files over
      src: /root/GitHub/ansible_tutorial_repo/FinalAnsibleProject/web_files/*
        dest: /var/www/html/*
        owner: apache
        group: web
        mode: '550'
        follow: yes
    - name: start the apache web services
      systemd:
        name: httpd
        enabled: yes
        state: started
- name: configure HAProxy
  gather_facts: false
  hosts: HA
  tasks:
    - name: configure the web server
      import_role: /roles/HAProxy
    - copy: 
        src: /root/GitHub/ansible_tutorial_repo/FinalAnsibleProject/configs/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        owner: haproxy
        group: root
        mode: '550'
        follow: yes
    - name: add systemd unit for haproxy
      systemd:
        name: haproxy
        enabled: yes
        state: started
- name: configure the DB Server
  gather_facts: false
  hosts: DB
  vars:
    mysql_root_password: "{{ vault_mysql_password }}"
  tasks:
    - name: configure the web server
        import_role: /roles/web
- name: Start the db services
  gather_facts: false
  hosts: DB
  tasks:
    systemd:
      enabled: yes
      state: started
      name: mariadb-server
- name: create the database
  hosts: DB
  tasks:
    mysql_db:
      login_user: "{{ vault_mysql_name }}"
      login_password: "{{ vault_mysql_password }}"
      login_host: "{{ vault_login_host }}"
      name: wordpress
      state: present
      
- name: create the db_user
  hosts: DB
  tasks:
    mysql_user:
      name: ''
      host: localhost
      state: absent
      login_user: "{{ vault_mysql_name }}"
      login_password: "{{ vault_mysql_password }}"
      login_host: "{{ vault_login_host }}"
    mysql_user:
      login_user: "{{ vault_mysql_name }}"
      login_password: "{{ vault_mysql_password }}"
      login_host: "{{ vault_login_host }}"
      name: "{{ vault_login_name }}"
      password: "{{ vault_login_password }}"
      priv: '*.*:ALL'
      state: present
- name: add the flask user
  hosts: DB
  tasks:
    user:
      name: flask
- name: install the flask restful module
  hosts: DB
  tasks:
    name: install flask
      import_role:
        name: flask
    copy:
        src: /root/GitHub/ansible_tutorial_repo/FinalAnsibleProject/web_files/*.py
        dest: /var/FlaskRestful/
        owner: flask
        mode: '550'
- name: set the username and password as env vars
  hosts: DB
  tasks:
    shell: db_username={{ vault_mysql_username }}
    shell: db_password={{ vault_mysql_password }}
- name: export the variables I need
  hosts: DB
  tasks:
    shell: export db_username; export db_password
- name: configure the restful_service
  hosts: DB
  tasks:
    copy:
      src: /root/GitHub/ansible_tutorial_repo/FinalAnsibleProject/config/flask_restful.service
      dest: /etc/systemd/system/flask_restful.service
      mode: '550'
    shell: enable flask_restful.service; start flask_restful.service
- name: configure the database tables:
  hosts: DB
  tasks:
    copy:
      src: /root/GitHub/ansible_tutorial_repo/FinalAnsibleProject/config/create_table.sql
      dest: /var/FlaskRestful/
      owner: 'flask'
      mode: '550'
    shell: mysql -u {{ vault_login_username }} -p {{ vault_login_host }} -h  {{ vault_login_host }} < /var/FlaskRestful.sql